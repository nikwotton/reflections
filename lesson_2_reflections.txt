What happens when you initialize a repository? Why do you need to do it?
Initializing a repository sets up a directory to be tracked by git. It needs to be done so that git tracks stuff. 

How is the staging area different from the working directory and the repository? What value do you think it offers?
The staging area is different because it should only contain changes that are confirmed to be desired and it adds the value of not actually being committed yet. 
How can you use the staging area to make sure you have one commit per logical change?
You can use the staging area to verify that all changes in a commit are related within a logical change before going through with actually making the commit. 

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
Branches come in handy when you want several separate versions of a codebase because they allow for organization and separation without confusion. 


How do the diagrams help you visualize the branch structure?
A diagram is a visual object so it helps to visualize..... Not really sure how to add extra explanation to that. 

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
Merging two branches together results in one "merge commit" being added to one of the branches and all of the commits on the other branch being added to it. We represent it in the diagram as such because it makes sense that way. 

What are the pros and cons of Git's automatic merging vs. always doing merges manually?
Automated systems always make things faster and easier but of course they don't always work exactly as we want them to. 


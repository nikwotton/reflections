When would you want to use a remote repository rather than keeping all your work local?
Keeping work in a remote repository allows for easy collaboration as well as a backup solution that is far better than just storing work in one location. 

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
If you are making changes to your local repository while on master and haven't made a branch yet, you don't want Git to automatically pull changes that may conflict with your local changes. 

Describe the differences between forks, clones, and branches. When would you use one instead of another?
Forks are only used on Github (and with food) so it's used when making a copy of a repo on GitHub. Clones are used to make a copy of a repo in all other situations (local -> local or GitHub -> local). Branches are used to keep track of different versions of a codebase within the same repo. 

What is the benefit of having a copy of the last known state of the remote stored locally?
It can be beneficial to have access to a copy of the remote to reference in case you are unable to access GitHub whether due to internet connectivity issues or server issues or other. Accessing this remote at all is good in case you make changes you want to undo, you will have something to revert to or just compare to when you aren't sure what you've changed since last pulling. 

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
Assuming this question is asking what I would do without version control of any kind, I would likely resort to a shared dropbox folder. This would make having changes appear quickly easier since adding and committing would be done automatically with every file save but working on the same files at the same time would be trickier since changes would get overwritten and also no systematic code history would exist. 

